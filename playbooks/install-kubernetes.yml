---
- name: Setup Kubernetes Prerequisites
  hosts: k8s_nodes
  become: true
  vars:
    user: "{{ ansible_user }}"

  tasks:
    - name: Add k8s repository
      shell:
        cmd: |
          cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/repodata/repomd.xml.key
          exclude=kubelet kubeadm kubectl
          EOF

    - name: Install required packages
      dnf:
        name:
          - curl
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
          - iproute-tc
        state: present

    - name: Add Docker CE repository
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
        mode: "0644"

    - name: Install Docker CE
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Setup containerd
      shell:
        cmd: |
          containerd config default > /etc/containerd/config.toml
          sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

    - name: start containerd
      service:
        name: containerd
        state: started
        enabled: yes

    - name: Disable swap
      shell: |
        swapoff -a
        sed -i '/swap/d' /etc/fstab
      when: ansible_swaptotal_mb > 0

    - name: Install Kubernetes packages
      dnf:
        name:
          - kubelet
          - kubeadm
          - kubectl
        disable_excludes: kubernetes
        state: present

    - name: Enable required kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      with_items:
        - br_netfilter
        - overlay

    - name: Configure kernel parameters for Kubernetes
      sysctl:
        name: "{{ item }}"
        value: "1"
        state: present
        reload: yes
      with_items:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
        - net.ipv4.ip_forward

    - name: Create kubernetes modules load file
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Create kubernetes sysctl file
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: Apply sysctl parameters
      command: sysctl --system

    - name: Start and enable kubelet service
      systemd:
        name: kubelet
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Configure containerd
      shell: |
        mkdir -p /etc/containerd
        containerd config default > /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml

    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes
