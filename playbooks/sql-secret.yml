---
- name: Configure SQL Connection String Secret
  hosts: k8s_master
  become: false
  vars:
    kube_config_dir: "{{ ansible_env.HOME }}/.kube"
    namespace: "{{ app_namespace }}"
    sql_connection_string: "{{ db_connection }}"
    mssql_sa_password: "{{ sa_password }}"

  tasks:
    - name: Create namespace if it doesn't exist
      shell: |
        kubectl create namespace {{ app_namespace }} --dry-run=client -o yaml | kubectl apply -f -
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"
      register: namespace_result
      changed_when: namespace_result.rc == 0

    - name: Create temporary file for SQL connection secret
      tempfile:
        state: file
        suffix: temp
      register: temp_secret_file

    - name: Generate SQL connection secret manifest
      copy:
        dest: "{{ temp_secret_file.path }}"
        content: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: sqlconnectionstring
            namespace: {{ namespace }}
          type: Opaque
          data:
            SQL_CONNECTION_STRING: "{{ sql_connection_string | b64encode }}"

    - name: Apply SQL connection secret to cluster
      command: kubectl apply -f {{ temp_secret_file.path }}
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"
      register: secret_result
      changed_when: secret_result.rc == 0

    - name: Remove temporary secret file
      file:
        path: "{{ temp_secret_file.path }}"
        state: absent

    # MSSQL SA Password Secret
    - name: Create temporary file for MSSQL SA password secret
      tempfile:
        state: file
        suffix: temp
      register: temp_sa_secret_file

    - name: Generate MSSQL SA password secret manifest
      copy:
        dest: "{{ temp_sa_secret_file.path }}"
        content: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: mssql
            namespace: {{ namespace }}
          type: Opaque
          data:
            MSSQL_SA_PASSWORD: "{{ mssql_sa_password | b64encode }}"

    - name: Apply MSSQL SA password secret to cluster
      command: kubectl apply -f {{ temp_sa_secret_file.path }}
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"
      register: sa_secret_result
      changed_when: sa_secret_result.rc == 0

    - name: Remove temporary SA password secret file
      file:
        path: "{{ temp_sa_secret_file.path }}"
        state: absent

    # Verify both secrets
    - name: Verify secrets creation
      command: kubectl get secrets -n {{ namespace }} sqlconnectionstring mssql
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"
      register: secrets_status
      changed_when: false
